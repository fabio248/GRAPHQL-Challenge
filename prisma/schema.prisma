// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int               @default(autoincrement()) @id
  email         String            @unique
  password      String
  username      String
  role          Role              @default(CLIENT)
  accessToken   String?            
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt @map("updated_at")

  //relations
  cart           Cart?     
  orders        Order[]         
  likesProducts UserLikeProduct[] 

  @@map("user")
}

model Product {
  id            Int               @default(autoincrement()) @id
  name          String
  description   String
  stock         Int
  price         Float
  isEnable      Boolean           @default(false) @map("is_enable")
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt      @map("updated_at")

  //relations
  category      Category         @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  categoryId    Int              @map("category_id")
  likesUsers    UserLikeProduct[] 
  images        Image[]
  orderDetails  OrderDetail[]
  productInCart ProductInCar[]

  @@map("product")
}

model Image {
  id            Int         @default(autoincrement()) @id
  name          String
  mimetype      String
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt      @map("updated_at")

  //relations
  product       Product     @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  productId     Int         @map("product_id")

  @@map("image")
}

model Category {
  id            Int         @default(autoincrement()) @id
  name          String
  description   String
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  //relations
  Products      Product[]

  @@map("category")
}

model UserLikeProduct {
  createdAt     DateTime    @default(now()) @map("created_at")

  //relations
  product       Product    @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  productId     Int        @map("product_id")
  user          User       @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId        Int        @map("user_id")

  @@id([userId,productId])
  @@map("user_like_post")
}

model Cart {
  id            Int             @default(autoincrement()) @id
  total         Float           @default(0)
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt      @map("updated_at")

  //relations
  user          User            @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId        Int             @map("user_id") @unique
  products      ProductInCar[]

  @@map("cart")
}
model ProductInCar {
  quantity      Int
  subtotal      Float        @default(0)
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt      @map("updated_at")

  //relations
  cart           Cart        @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId         Int         @map("car_id")
  product        Product     @relation(fields: [productId] ,references: [id])
  productId      Int         @map("product_id")

  @@id([cartId,productId])
  @@map("product_in_car")
}

model Order {
  id            Int         @default(autoincrement()) @id
  total         Float
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt      @map("updated_at")

  //relations
  user          User        @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId        Int         @map("user_id")
  orderDetails  OrderDetail[]

  @@map("order")
}

model OrderDetail {
  id            Int         @default(autoincrement()) @id
  quantity      Int
  subtotal      Float
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt      @map("updated_at")

  //relations
  order         Order       @relation(fields: [orderId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  orderId       Int         @map("order_id")
  product       Product     @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  productId     Int         @map("product_id")

  
  @@map("order_detail")
}

enum Role {
  CLIENT
  MANAGER
}